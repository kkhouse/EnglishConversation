plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlinx.serialization)
    alias(libs.plugins.dagger.hilt)
    id 'kotlin-kapt'
}

android {
    namespace 'com.example.englishassistantapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.englishassistantapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField("String", "OPENAI_API_KEY", "your_openai_api_key")
            buildConfigField("Boolean", "IS_MOCKED_RESPONSE_NEEDED", "false")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation(libs.androidx.ktx)
    implementation(libs.bundles.compose.ui)
    implementation(libs.android.lifecycle.viewmodel.ktx)
    implementation(libs.androidx.viewmodel.compose)
    implementation(libs.androidx.compose)
    implementation(libs.androidx.compose.material3)

    implementation(libs.openAi.client)
    implementation(libs.serialization.core)
    implementation(libs.dagger)
    kapt(libs.dagger.compiler)
    implementation(libs.androidx.compose.ui.googlefonts)


    implementation(libs.ktor.client.android)
    // TODO 以下は上に以降
    api(libs.coroutines.core)
    api(libs.okio)
    implementation(libs.serialization.json)
    implementation(libs.ktor.client.core)
    implementation(libs.ktor.client.logging)
    implementation(libs.ktor.client.auth)
    implementation(libs.ktor.client.content.negotiation)
    implementation(libs.ktor.client.serialization.json)

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

configurations.all {
    resolutionStrategy {
        force(libs.android.lifecycle.viewmodel)
        force(libs.android.lifecycle.viewmodel.ktx)
    }
}